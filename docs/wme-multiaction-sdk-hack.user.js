this.WS=this.WS||{},this.WS.SDKMultiActionHack=function(){"use strict";function i(){return"unsafeWindow"in window?window.unsafeWindow:window}class t{constructor(i,t,n){this._target=i,this._methodName=t,this._interceptor=n,this._isEnabled=!1,this.managedInterceptor=(...i)=>this._isEnabled?this._interceptor(((...i)=>this.invokeOriginal(...i)),...i):this.invokeOriginal(...i),this.initialize()}initialize(){this._originalMethod=this._target[this._methodName],this._target[this._methodName]=this.managedInterceptor}invokeOriginal(...i){return this._originalMethod.apply(this._target,i)}enable(){this._isEnabled=!0}disable(){this._isEnabled=!1}}const n=function(){try{return i().require("Waze/Action/MultiAction")}catch{return null}}();const s=i(),a=new class{constructor(i){this._actionsInTransaction=[],this._hasActiveTransaction=!1,this._interceptor=new t(i,"add",((i,t)=>this.isTransactionOpen?(this._actionsInTransaction.push(t),null):i(t))),this._interceptor.enable()}closeTransaction(){return this._hasActiveTransaction=!1,this.getTransactionActions()}openTransaction(){this._actionsInTransaction=[],this._hasActiveTransaction=!0}get isTransactionOpen(){return this._hasActiveTransaction}beginTransaction(){this.openTransaction()}getTransactionActions(){return this._actionsInTransaction}commitTransaction(i){const t=this.closeTransaction();if(!n)return void t.forEach((i=>this._interceptor.invokeOriginal(i)));const s=new n(t);i&&(s._description=i),this._interceptor.invokeOriginal(s)}}(s.W.model.actionManager);return{beginTransaction:()=>a.beginTransaction(),commitTransaction:i=>a.commitTransaction(i),groupActions(i,t){a.beginTransaction(),i(),a.commitTransaction(t)}}}();
