!function(){class t extends Error{constructor(){super(...arguments),this.name="InvalidStateError"}}class e extends Error{constructor(){super(...arguments),this.name="WMEError"}}function r(){return"unsafeWindow"in window?window.unsafeWindow:window}var n=6371008.8,o={centimeters:637100880,centimetres:637100880,degrees:360/(2*Math.PI),feet:20902260.511392,inches:39.37*n,kilometers:6371.0088,kilometres:6371.0088,meters:n,metres:n,miles:3958.761333810546,millimeters:6371008800,millimetres:6371008800,nauticalmiles:n/1852,radians:1,yards:6967335.223679999};function i(t,e,r={}){const n={type:"Feature"};return(0===r.id||r.id)&&(n.id=r.id),r.bbox&&(n.bbox=r.bbox),n.properties=e||{},n.geometry=t,n}function s(t,e,r={}){if(!t)throw new Error("coordinates is required");if(!Array.isArray(t))throw new Error("coordinates must be an Array");if(t.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!h(t[0])||!h(t[1]))throw new Error("coordinates must contain numbers");return i({type:"Point",coordinates:t},e,r)}function a(t,e,r={}){if(t.length<2)throw new Error("coordinates must be an array of two or more positions");return i({type:"LineString",coordinates:t},e,r)}function u(t,e="kilometers"){const r=o[e];if(!r)throw new Error(e+" units is invalid");return t*r}function c(t){return 180*(t%(2*Math.PI))/Math.PI}function l(t){return t%360*Math.PI/180}function f(t,e="kilometers",r="kilometers"){if(!(t>=0))throw new Error("length must be a positive number");return u(function(t,e="kilometers"){const r=o[e];if(!r)throw new Error(e+" units is invalid");return t/r}(t,e),r)}function h(t){return!isNaN(t)&&null!==t&&!Array.isArray(t)}function d(t){if(!t)throw new Error("coord is required");if(!Array.isArray(t)){if("Feature"===t.type&&null!==t.geometry&&"Point"===t.geometry.type)return[...t.geometry.coordinates];if("Point"===t.type)return[...t.coordinates]}if(Array.isArray(t)&&t.length>=2&&!Array.isArray(t[0])&&!Array.isArray(t[1]))return[...t];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function w(t,e,r){if(!t)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!t||"Feature"!==t.type||!t.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!t.geometry||t.geometry.type!==e)throw new Error("Invalid input to "+r+": must be a "+e+", given "+t.geometry.type)}function m(t,e,r={}){var n=d(t),o=d(e),i=l(o[1]-n[1]),s=l(o[0]-n[0]),a=l(n[1]),c=l(o[1]),f=Math.pow(Math.sin(i/2),2)+Math.pow(Math.sin(s/2),2)*Math.cos(a)*Math.cos(c);return u(2*Math.atan2(Math.sqrt(f),Math.sqrt(1-f)),r.units)}function M(t,e,r){if(null!==t)for(var n,o,i,s,a,u,c,l,f=0,h=0,d=t.type,w="FeatureCollection"===d,m="Feature"===d,g=w?t.features.length:1,v=0;v<g;v++){a=(l=!!(c=w?t.features[v].geometry:m?t.geometry:t)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var y=0;y<a;y++){var b=0,p=0;if(null!==(s=l?c.geometries[y]:c)){u=s.coordinates;var E=s.type;switch(f=0,E){case null:break;case"Point":if(!1===e(u,h,v,b,p))return!1;h++,b++;break;case"LineString":case"MultiPoint":for(n=0;n<u.length;n++){if(!1===e(u[n],h,v,b,p))return!1;h++,"MultiPoint"===E&&b++}"LineString"===E&&b++;break;case"Polygon":case"MultiLineString":for(n=0;n<u.length;n++){for(o=0;o<u[n].length-f;o++){if(!1===e(u[n][o],h,v,b,p))return!1;h++}"MultiLineString"===E&&b++,"Polygon"===E&&p++}"Polygon"===E&&b++;break;case"MultiPolygon":for(n=0;n<u.length;n++){for(p=0,o=0;o<u[n].length;o++){for(i=0;i<u[n][o].length-f;i++){if(!1===e(u[n][o][i],h,v,b,p))return!1;h++}p++}b++}break;case"GeometryCollection":for(n=0;n<s.geometries.length;n++)if(!1===M(s.geometries[n],e))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function g(t,e){!function(t,e){var r,n,o,i,s,a,u,c,l,f,h=0,d="FeatureCollection"===t.type,w="Feature"===t.type,m=d?t.features.length:1;for(r=0;r<m;r++){for(a=d?t.features[r].geometry:w?t.geometry:t,c=d?t.features[r].properties:w?t.properties:{},l=d?t.features[r].bbox:w?t.bbox:void 0,f=d?t.features[r].id:w?t.id:void 0,s=(u=!!a&&"GeometryCollection"===a.type)?a.geometries.length:1,o=0;o<s;o++)if(null!==(i=u?a.geometries[o]:a))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===e(i,h,c,l,f))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===e(i.geometries[n],h,c,l,f))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===e(null,h,c,l,f))return!1;h++}}(t,(function(t,r,n,o,s){var a,u=null===t?null:t.type;switch(u){case null:case"Point":case"LineString":case"Polygon":return!1!==e(i(t,n,{bbox:o,id:s}),r,0)&&void 0}switch(u){case"MultiPoint":a="Point";break;case"MultiLineString":a="LineString";break;case"MultiPolygon":a="Polygon"}for(var c=0;c<t.coordinates.length;c++){var l=t.coordinates[c];if(!1===e(i({type:a,coordinates:l},n),r,c))return!1}}))}function v(t,e){g(t,(function(t,r,n){var o=0;if(t.geometry){var i=t.geometry.type;if("Point"!==i&&"MultiPoint"!==i){var s,u=0,c=0,l=0;return!1!==M(t,(function(i,f,h,d,w){if(void 0===s||r>u||d>c||w>l)return s=i,u=r,c=d,l=w,void(o=0);var m=a([s,i],t.properties);if(!1===e(m,r,n,w,o))return!1;o++,s=i}))&&void 0}}}))}var y=Object.defineProperty,b=Object.defineProperties,p=Object.getOwnPropertyDescriptors,E=Object.getOwnPropertySymbols,P=Object.prototype.hasOwnProperty,S=Object.prototype.propertyIsEnumerable,k=(t,e,r)=>e in t?y(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,O=(t,e)=>{for(var r in e||(e={}))P.call(e,r)&&k(t,r,e[r]);if(E)for(var r of E(e))S.call(e,r)&&k(t,r,e[r]);return t},F=(t,e)=>b(t,p(e));function A(t,e,r={}){if(!t||!e)throw new Error("lines and pt are required arguments");const n=d(e);let o=s([1/0,1/0],{dist:1/0,index:-1,multiFeatureIndex:-1,location:-1}),i=0;return g(t,(function(t,a,u){const c=function(t){if(Array.isArray(t))return t;if("Feature"===t.type){if(null!==t.geometry)return t.geometry.coordinates}else if(t.coordinates)return t.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}(t);for(let t=0;t<c.length-1;t++){const a=s(c[t]);a.properties.dist=m(e,a,r);const l=d(a),f=s(c[t+1]);f.properties.dist=m(e,f,r);const h=d(f),w=m(a,f,r);let M,g,v;l[0]===n[0]&&l[1]===n[1]?[M,,g]=[l,void 0,!1]:h[0]===n[0]&&h[1]===n[1]?[M,,g]=[h,void 0,!0]:[M,,g]=N(a.geometry.coordinates,f.geometry.coordinates,d(e)),M&&(v=s(M,{dist:m(e,M,r),multiFeatureIndex:u,location:i+m(a,M,r)})),v&&v.properties.dist<o.properties.dist&&(o=F(O({},v),{properties:F(O({},v.properties),{index:g?t+1:t})})),i+=w}})),o}function j(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2))}function L(t,e){const r=function(t,e){const[r,n,o]=t,[i,s,a]=e;return r*i+n*s+o*a}(t,e)/(j(t)*j(e));return Math.acos(Math.min(Math.max(r,-1),1))}function x(t){const e=l(t[1]),r=l(t[0]);return[Math.cos(e)*Math.cos(r),Math.cos(e)*Math.sin(r),Math.sin(e)]}function G(t){const[e,r,n]=t,o=c(Math.asin(n));return[c(Math.atan2(r,e)),o]}function N(t,e,r){const n=x(t),o=x(e),i=x(r),[s,a,u]=i,[c,l,f]=function(t,e){const[r,n,o]=t,[i,s,a]=e;return[n*a-o*s,o*i-r*a,r*s-n*i]}(n,o),h=l*u-f*a,d=f*s-c*u,w=c*a-l*s,M=w*l-d*f,g=h*f-w*c,v=d*c-h*l,y=1/Math.sqrt(Math.pow(M,2)+Math.pow(g,2)+Math.pow(v,2)),b=[M*y,g*y,v*y],p=[-1*M*y,-1*g*y,-1*v*y],E=L(n,o),P=L(n,b),S=L(o,b),k=L(n,p),O=L(o,p);let F;return F=P<k&&P<O||S<k&&S<O?b:p,L(n,F)>E||L(o,F)>E?m(G(F),G(n))<=m(G(F),G(o))?[G(n),!0,!1]:[G(o),!1,!0]:[G(F),!1,!1]}var T=A;function C(t,e,r={}){const o=d(t),i=d(e);i[0]+=i[0]-o[0]>180?-360:o[0]-i[0]>180?360:0;const s=function(t,e,r){const o=r=void 0===r?n:Number(r),i=t[1]*Math.PI/180,s=e[1]*Math.PI/180,a=s-i;let u=Math.abs(e[0]-t[0])*Math.PI/180;u>Math.PI&&(u-=2*Math.PI);const c=Math.log(Math.tan(s/2+Math.PI/4)/Math.tan(i/2+Math.PI/4)),l=Math.abs(c)>1e-11?a/c:Math.cos(i),f=Math.sqrt(a*a+l*l*u*u);return f*o}(o,i);return f(s,"meters",r.units)}function W(t,e){return t[0]*e[0]+t[1]*e[1]}var q=function(t,e,r={}){var n,o;const u=null!=(n=r.method)?n:"geodesic",c=null!=(o=r.units)?o:"kilometers";if(!t)throw new Error("pt is required");if(Array.isArray(t)?t=s(t):"Point"===t.type?t=i(t):w(t,"Point","point"),!e)throw new Error("line is required");Array.isArray(e)?e=a(e):"LineString"===e.type?e=i(e):w(e,"LineString","line");let l=1/0;const h=t.geometry.coordinates;return v(e,(t=>{if(t){const e=t.geometry.coordinates[0],r=t.geometry.coordinates[1],n=function(t,e,r,n){if("geodesic"===n.method){return A(a([e,r]).geometry,t,{units:"degrees"}).properties.dist}const o=[r[0]-e[0],r[1]-e[1]],i=[t[0]-e[0],t[1]-e[1]],s=W(i,o);if(s<=0)return C(t,e,{units:"degrees"});const u=W(o,o);if(u<=s)return C(t,r,{units:"degrees"});const c=s/u,l=[e[0]+c*o[0],e[1]+c*o[1]];return C(t,l,{units:"degrees"})}(h,e,r,{method:u});n<l&&(l=n)}})),f(l,"degrees",c)};function I(t,e,r,n){let o=null,i=1/0;for(const r of e){const e=r.attributes.geoJSONGeometry,s=q(t,e,{units:n.units});s<i&&s<n.distance&&(i=s,o={feature:r,point:T(e,t).geometry,type:"edge"});for(const s of e.coordinates){const e=m(t,{type:"Point",coordinates:s},{units:n.units});e<i&&e<n.distance&&(i=e,o={feature:r,point:{type:"Point",coordinates:s},type:"vertex"})}}for(const e of r){const r=e.attributes.geoJSONGeometry,s=m(t,r,{units:n.units});s<i&&s<n.distance&&(i=s,o={feature:e,point:r,type:"node"})}return o}class _ extends EventTarget{constructor(t,e){super(),this.t=t[e],Object.defineProperty(t,e,{get:()=>this.t,set:t=>{t!==this.t&&this.o(t)}}),setTimeout((()=>{this.o(this.t)}))}o(t){this.t=t,this.dispatchEvent(new CustomEvent("change",{detail:t}))}get value(){return this.t}}class B{constructor(t,e,r){this.i=new Map,this.u=t,this.l=e,this.h=Object.assign(Object.assign({},B.defaultOptions),r)}m(t){const e=this.u.split(".");e.pop();let r=t;for(const t of e)r=r[t];return Object.getPrototypeOf(r)||r}install(t){var e;const r=this.m(t),n=this.u.split(".").pop(),o=r[n];(null===(e=this.h)||void 0===e?void 0:e.onlyIfNotExists)&&o||(r[n]=this.l,this.i.set(t,o))}uninstall(t){const e=this.m(t),r=this.u.split(".").pop(),n=this.i.get(t);n&&(e[r]=n)}}B.defaultOptions={onlyIfNotExists:!0};(new class{constructor(){this.M=[],this.v()}v(){this.p||(this.p=new _(r(),"getWmeSdk"),this.p.addEventListener("change",(({detail:t})=>{const e=t;if(e.P)return;const n=(...t)=>{const r=e(...t);return this.S&&Object.getPrototypeOf(r)===Object.getPrototypeOf(this.S)||this.k(this.S,r),r};n.P=!0,r().getWmeSdk=n})))}k(t,e){t&&this.M.forEach((e=>e.uninstall(t))),e&&(this.M.forEach((t=>t.install(e))),this.S=e)}addHook(t){this.M.push(t),this.S&&t.install(this.S)}removeHook(t){const e=this.M.indexOf(t);-1!==e&&(this.M.splice(e,1),this.S&&t.uninstall(this.S))}}).addHook(new B("DataModel.Segments.addAndSnapSegment",(function({geometry:n,roadType:o}){const i=r();if(!i.W.editingMediator.isAllowedToDrawNewFeatures())throw new t("Not allowed to add a new segment");const a=i.W.model.segments.generateUniqueID(),{snappedLine:u,snappedFeatures:c}=function(t,e){var n,o;const i=r(),a=i.W.model.segments.getObjectArray(),u=i.W.model.nodes.getObjectArray(),c=s(t.coordinates[0]).geometry,l=s(t.coordinates[t.coordinates.length-1]).geometry,f=I(c,a,u,e),h=I(l,a,u,e);return console.log(f,h),{snappedLine:Object.assign(Object.assign({},t),{coordinates:[(null===(n=null==f?void 0:f.point)||void 0===n?void 0:n.coordinates)||c.coordinates,...t.coordinates.slice(1,-1),(null===(o=null==h?void 0:h.point)||void 0===o?void 0:o.coordinates)||l.coordinates]}),snappedFeatures:[f,h].filter(Boolean)}}(n,{distance:1,units:"meters"}),l=(f={id:a,geoJSONGeometry:u,roadType:o},new(r().require("Waze/Feature/Vector/Segment"))(f));var f;const h=new(i.require("Waze/Action/AddSegment"))(l,{createNodes:!0,createTwoWay:i.W.prefs.get("twoWaySegmentsByDefault"),openAllTurns:i.W.prefs.get("enableTurnsByDefault"),snappedFeatures:c});if(!i.W.model.actionManager.add(h))throw new e("Failed to add a new segment");return l})))}();
